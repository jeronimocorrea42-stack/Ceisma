local Players = game:GetService("Players")
local VirtualUser = game:GetService("VirtualUser")

local function preventAFK()
    VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    task.wait(1)
    VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    print("Anti-AFK: Prevented kick")
end

Players.LocalPlayer.Idled:Connect(preventAFK)
print("Anti-AFK ativado!")

Biblioteca local = loadstring(juego:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library/main/Library"))()
Ventana local = Biblioteca:AddWindow("SCRIPT PRIVADO BD", {
    color principal = Color3.fromRGB(255, 0, 255) ,
    tamaño_mín = Vector2.new(500, 600),
    can_resize = verdadero
})

MainTab local = Ventana:AddTab("Principal")
local LocalPlayersFolder = PestañaPrincipal:AddFolder("Jugadores Locales")
LocalPlayersFolder:AddSwitch("Comer huevo proteico automáticamente cada 30 minutos", función(estado)
    getgenv().autoEatProteinEggActive = estado
    tarea.spawn(función()
        mientras getgenv().autoEatProteinEggActive y LocalPlayer.Character hacen
            huevo local = LocalPlayer.Backpack:FindFirstChild("Huevo de proteína") o LocalPlayer.Character:FindFirstChild("Huevo de proteína")
            si huevo entonces
                huevo.Padre = JugadorLocal.Carácter
                AlmacenamientoReplicado.muscleEvent:FireServer("rep")
            fin
            tarea.wait(1800)
        fin
    fin)
fin)
LocalPlayersFolder:AddSwitch("Comer huevo proteico automáticamente cada 1 hora", función(estado)
    getgenv().autoEatProteinEggHourly = estado
    tarea.spawn(función()
        mientras getgenv().autoEatProteinEggHourly y LocalPlayer.Character hacen
            huevo local = LocalPlayer.Backpack:FindFirstChild("Huevo de proteína") o LocalPlayer.Character:FindFirstChild("Huevo de proteína")
            si huevo entonces
                huevo.Padre = LocalPlayer.CharacteColor3.fromRGB(255, 0, 255)
                AlmacenamientoReplicado.muscleEvent:FireServer("rep")
            fin
            tarea.wait(3600)
        fin
    fin)
fin)
CarpetaMiscelánea local = PestañaPrincipal:AñadirCarpeta("Miscelánea")
MiscFolder:AddSwitch("Auto Farm (Equipar cualquier herramienta)", función(estado)
    getgenv().autoFarm = estado
    tarea.spawn(función()
        mientras que getgenv().autoFarm y LocalPlayer.Character hacen
            para _, herramienta en pares(LocalPlayer.Backpack:GetChildren()) hacer
                si herramienta:IsA("Herramienta") entonces
                    herramienta.Padre = LocalPlayer.Carácter
                    AlmacenamientoReplicado.muscleEvent:FireServer("rep")
                    tarea.esperar(0.1)
                fin
            fin
            tarea.esperar()
        fin
    fin)
fin)
MiscFolder:AddLabel("---Script Hub---")
MiscFolder:AddButton("Bloqueo de mayúsculas permanente", función()
    cadena de carga (juego: HttpGet ("https://raw.githubusercontent.com/MiniNoobie/ShiftLockx/main/Shiftlock-MiniNoobie"))()
fin)
MiscFolder:AddLabel("---Hora---")
MiscFolder:AddButton("Noche", función()
    Iluminación.ClockTime = 0
fin)
MiscFolder:AddButton("Mañana", función()
    Iluminación.ClockTime = 6
fin)
MiscFolder:AddButton("Día", función()
    Iluminación.ClockTime = 12
fin)
MiscFolder:AddLabel("----Agricultura----")
CarpetaAutoBrawl local = PestañaPrincipal:AñadirCarpeta("Auto Brawl")
AutoBrawlFolder:AddSwitch("Gana pelea automáticamente", función(estado)
    getgenv().autoWinBrawl = estado
    tarea.spawn(función()
        mientras que getgenv().autoWinBrawl y LocalPlayer.Character hacen
            ReplicatedStorage.rEvents.joinBrawl:FireServer("Win")
            task.wait(1)
        end
    end)
end)
AutoBrawlFolder:AddSwitch("Auto Join Brawl (For Farming)", function(state)
    getgenv().autoBrawlFarm = state
    task.spawn(function()
        while getgenv().autoBrawlFarm and LocalPlayer.Character do
            ReplicatedStorage.rEvents.joinBrawl:FireServer("Farm")
            task.wait(1)
        end
    end)
end)
local OpStuffFolder = MainTab:AddFolder("Op stuff (for farm)")
OpStuffFolder:AddSwitch("Anti Knockback", function(state)
    getgenv().antiKnockback = state
    LocalPlayer.CharacterAdded:Connect(function(char)
        if getgenv().antiKnockback then
            char.HumanoidRootPart.Anchored = true
            task.wait(0.1)
            char.HumanoidRootPart.Anchored = false
        end
    end)
end)
OpStuffFolder:AddSwitch("Auto Pushups with Rock (10M) and Auto Punch", function(state)
    getgenv().autoPushups10M = state
    task.spawn(function()
        while getgenv().autoPushups10M and LocalPlayer.Character do
            local punch = LocalPlayer.Backpack:FindFirstChild("Pushups") or LocalPlayer.Character:FindFirstChild("Pushups")
            if punch then
                punch.Parent = LocalPlayer.Character
                ReplicatedStorage.muscleEvent:FireServer("punch", "rightHand")
                ReplicatedStorage.muscleEvent:FireServer("punch", "leftHand")
                local rock = Workspace.machinesFolder:FindFirstChild("King Rock")
                if rock and LocalPlayer:FindFirstChild("Durability") and LocalPlayer.Durability.Value >= 10000000 then
                    firetouchinterest(rock.Rock, LocalPlayer.Character.RightHand, 0)
                    firetouchinterest(rock.Rock, LocalPlayer.Character.LeftHand, 0)
                    task.wait()
                    firetouchinterest(rock.Rock, LocalPlayer.Character.RightHand, 1)
                    firetouchinterest(rock.Rock, LocalPlayer.Character.LeftHand, 1)
                end
            end
    fin)
fin)
BoostTab:AddLabel("Aura del anillo")
BoostTab:AddTextBox("Incluir reproductor en la lista blanca", función(nombre)
    getgenv().whitelist = getgenv().whitelist o {}
    tabla.insert(getgenv().whitelist, nombre)
fin)
BoostTab:AddButton("Borrar lista blanca", función()
    getgenv().lista blanca = {}
fin)
BoostTab:AddTextBox("Radio del aura del anillo", función(valor)
    getgenv().ringAuraRadius = tonumber(valor) o 10
fin)
BoostTab:AddSwitch("Aura de anillo", función(estado)
    getgenv().ringAura = estado
    tarea.spawn(función()
        mientras que getgenv().ringAura y LocalPlayer.Character hacen
            para _, jugador en ipairs(Players:GetPlayers()) hacer
                si jugador ~= LocalPlayer y no table.find(getgenv().whitelist o {}, jugador.Name) y jugador.Character y jugador.Character.HumanoidRootPart entonces
                    distancia local = (LocalPlayer.Character.HumanoidRootPart.Position - jugador.Character.HumanoidRootPart.Position).Magnitud
                    si la distancia <= (getgenv().ringAuraRadius o 10) entonces
                        ReplicatedStorage.muscleEvent:FireServer("puñetazo", "manoderecha")
                        ReplicatedStorage.muscleEvent:FireServer("puñetazo", "manoizquierda")
                    fin
                fin
            fin
            tarea.esperar(0.1)
        fin
    fin)
fin)
BoostTab:AddLabel("Renacimientos rápidos")
BoostTab:AddSwitch("Renacimientos rápidos | Nuevos paquetes requeridos |", función(estado)
    getgenv().fastRebirths = estado
    tarea.spawn(función()
        mientras que getgenv().fastRebirths y LocalPlayer.Character hacen
            ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("solicitud de renacimiento")
            tarea.esperar(0.1)
        fin
    fin)
fin)
BoostTab:AddSwitch("Ganancia rápida", función(estado)
    getgenv().fastGain = estado
    tarea.spawn(función()
        mientras que getgenv().fastGain y LocalPlayer.Character hacen
            AlmacenamientoReplicado.muscleEvent:FireServer("rep")
            tarea.esperar(0.05)
        fin
    fin)
fin)
BoostTab:AddSwitch("Ocultar marcos", función(estado)
    getgenv().hideFrames = estado
    tarea.spawn(función()
        mientras getgenv().hideFrames lo hace
            para _, marco en pares(juego:GetService("CoreGui"):GetDescendants()) hacer
                si marco:IsA("Marco") entonces
                    marco.Visible = falso
                fin
            fin
            tarea.esperar(0.1)
        fin
    fin)
fin)

LocalPlayer.CharacterAdded:Connect(función(carácter)
    si getgenv().setws y char:FindFirstChild("Humanoid") entonces
        char.Humanoid.WalkSpeed ​​= getgenv().ws o 16
    fin
    si getgenv().jumpPower y char:FindFirstChild("Humanoid") entonces
        char.Humanoid.JumpPower = getgenv().jumpPower o 50
    fin
    si getgenv().hipHeight y char:FindFirstChild("Humanoid") entonces
        char.Humanoid.HipHeight = getgenv().hipHeight o 0
    fin
fin)
